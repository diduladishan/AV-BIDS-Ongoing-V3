{"version":3,"file":"static/js/731.7156d71d.chunk.js","mappings":"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","sources":["utils/validations/login-form-validation.ts","pages/6_existing_user/index.tsx","utils/api.ts"],"sourcesContent":["import * as z from 'zod';\n\nexport const LoginFormSchema = z.object({\n  email: z.string().email().min(1),\n  password: z.string(),\n});\n\nexport type LoginFormValues = z.infer<typeof LoginFormSchema>;\n","import { zodResolver } from '@hookform/resolvers/zod';\nimport {\n  Button,\n  Card,\n  Checkbox,\n  Input,\n  Typography,\n} from '@material-tailwind/react';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport LOGO from '../../assets/register/logo.png';\nimport api from '../../utils/api';\nimport {\n  LoginFormSchema,\n  LoginFormValues,\n} from '../../utils/validations/login-form-validation';\n\nexport function Index() {\n  const navigate = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<LoginFormValues>({\n    resolver: zodResolver(LoginFormSchema),\n    defaultValues: {\n      email: '',\n      password: '',\n    },\n  });\n\n  const onSubmit = async (values: LoginFormValues) => {\n    try {\n      const { data } = await api.post('/auth/login', { ...values });\n\n      console.log(data.user);\n      if (data.user.userType === 'PROVIDER') {\n        navigate('/provider-dashboard');\n      } else {\n        navigate('/planner-dashboard');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div className='flex items-center justify-center h-screen bg-[#f3f1fb]'>\n      <div>\n        <div className='flex items-center justify-center mb-6'>\n          <img src={LOGO} alt='aad' className=' w-[150px] object-contain' />\n        </div>\n\n        <Card color='white' className='m-0 grid  px-8 pt-8 pb-8'>\n          <p className='text-[30px] text-primary'>Welcome Back!</p>\n          <h2 className='text-[30px] text-primary'>Sign In</h2>\n          <form\n            className='mt-8 mb-2 w-80 max-w-screen-lg sm:w-96'\n            onSubmit={handleSubmit(onSubmit)}\n          >\n            <div className='mb-1 flex flex-col gap-6'>\n              {/* <Input\n                size=\"lg\"\n                placeholder=\"Username\"\n                className=\" !border-t-blue-gray-200 focus:!border-t-gray-900  rounded-full bg-[#223323]\"\n                labelProps={{\n                  className: \"before:content-none after:content-none\",\n                }}\n                crossOrigin=\"anonymous\"\n              /> */}\n\n              <div>\n                {' '}\n                <Input\n                  placeholder='email'\n                  className=' !border-t-blue-gray-200 focus:!border-t-gray-900 bg-[#f3f1fc] rounded-full'\n                  labelProps={{\n                    className: 'before:content-none after:content-none',\n                  }}\n                  crossOrigin='anonymous'\n                  {...register('email')}\n                />\n                {errors.email && <span>Email is required</span>}\n              </div>\n\n              <div>\n                {' '}\n                <Input\n                  type='password'\n                  placeholder='Password'\n                  className=' !border-t-blue-gray-200 focus:!border-t-gray-900 bg-[#f3f1fc] rounded-full'\n                  labelProps={{\n                    className: 'before:content-none after:content-none',\n                  }}\n                  crossOrigin='anonymous'\n                  {...register('password')}\n                />\n                {errors.password && <span>Password is required</span>}\n              </div>\n            </div>\n\n            <div className='flex items-center justify-between'>\n              <div>\n                {' '}\n                <Checkbox\n                  label={\n                    <div className='flex justify-between gap-32'>\n                      <h6 className='flex items-center font-normal text-[14px]'>\n                        Remember me\n                      </h6>\n\n                      {/* <h6 className=\"flex items-center font-normal text-[14px] text-[#8645FF] underline\">\n                    Forgot Password\n                  </h6> */}\n                    </div>\n                  }\n                  crossOrigin='anonymous'\n                  containerProps={{ className: '-ml-2.5' }}\n                />\n              </div>\n\n              <h6 className='font-normal text-[14px] text-[#8645FF] underline'>\n                Forgot Password?\n              </h6>\n            </div>\n\n            <Button\n              className='mt-6 bg-primary rounded-full'\n              fullWidth\n              type='submit'\n            >\n              <h6>Login</h6>\n            </Button>\n            <Typography color='gray' className='mt-4 text-center font-normal'>\n              <p className='text-[14px]'>\n                {' '}\n                Donâ€™t have an Account?{' '}\n                <span\n                  className='text-[#8645FF] underline cursor-pointer'\n                  onClick={() => navigate('/5_01_create_event_planner')}\n                >\n                  Sign Up\n                </span>\n              </p>\n            </Typography>\n          </form>\n        </Card>\n      </div>\n    </div>\n  );\n}\n\nexport default Index;\n","import axios from 'axios';\n\n// Create an instance of axios\nconst api = axios.create({\n  // baseURL: 'http://52.41.255.9:5000/api',\n  baseURL: 'http://localhost:5000/api',\n  headers: {\n    'Content-Type': 'application/json',\n    // 'Content-Type': 'multipart/form-data',\n  },\n});\n\nexport default api;\n"],"names":["LoginFormSchema","z","email","min","password","Index","navigate","useNavigate","_useForm","useForm","resolver","zodResolver","defaultValues","register","handleSubmit","errors","formState","onSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","_yield$api$post","data","wrap","_context","prev","next","api","post","_objectSpread","sent","console","log","user","userType","t0","stop","_x","apply","arguments","_jsx","className","children","_jsxs","src","LOGO","alt","Card","color","Input","placeholder","labelProps","crossOrigin","type","Checkbox","label","containerProps","Button","fullWidth","Typography","onClick","axios","create","baseURL","headers"],"sourceRoot":""}