{"version":3,"file":"static/js/136.df0540ef.chunk.js","mappings":"sRAEaA,EAAqBC,EAAAA,GAAS,CACzCC,UAAWD,EAAAA,KAAWE,IAAI,GAC1BC,SAAUH,EAAAA,KAAWE,IAAI,GACzBE,MAAOJ,EAAAA,KAAWI,QAAQF,IAAI,GAC9BG,SAAUL,EAAAA,KAAWE,IAAI,K,SCmBZ,SAASI,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjBC,GAAgCC,EAAAA,EAAAA,UAAS,WAAUC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5CI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAC5BI,GAA8BL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAE1BG,GAIIC,EAAAA,EAAAA,IAA4B,CAC9BC,UAAUC,EAAAA,EAAAA,GAAYvB,GACtBwB,cAAe,CACbtB,UAAW,GACXE,SAAU,GACVC,MAAO,GACPC,SAAU,MATZmB,EAAQL,EAARK,SACAC,EAAYN,EAAZM,aACaC,EAAMP,EAAnBQ,UAAaD,OAWTE,EAAQ,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,GAA0B,IAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEvBC,EAAAA,EAAIC,KAAK,kBAAgBC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC3CR,GAAM,IACTrB,SAAAA,KACC,KAAD,EAAAsB,EAAAE,EAAAM,KAEoB,aALVR,EAAJS,KAKC/B,SACPN,EAAS,uBAETA,EAAS,sBACV8B,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,SAEDS,QAAQC,IAAGV,EAAAQ,IAAQ,yBAAAR,EAAAW,OAAA,GAAAf,EAAA,kBAEtB,gBAfagB,GAAA,OAAApB,EAAAqB,MAAA,KAAAC,UAAA,KAiBd,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yDAAwDC,UACrEC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wCAAuCC,UACpDF,EAAAA,EAAAA,KAAA,OAAKI,IAAKC,EAAMC,IAAI,MAAML,UAAU,iCAItCE,EAAAA,EAAAA,MAACI,EAAAA,KAAI,CAACN,UAAU,YAAWC,SAAA,EACzBF,EAAAA,EAAAA,KAACQ,EAAAA,WAAU,CACTC,MAAM,QACNC,SAAS,EACTC,QAAQ,EACRV,UAAU,yDAAwDC,UAElEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,yBAAwBC,SAAC,sBAEzCF,EAAAA,EAAAA,KAACY,EAAAA,SAAQ,CAAAV,UACPC,EAAAA,EAAAA,MAACU,EAAAA,KAAI,CAACC,MAAOrD,EAAUwC,UAAU,mBAAkBC,SAAA,EACjDC,EAAAA,EAAAA,MAACY,EAAAA,WAAU,CAACd,UAAU,oDAAmDC,SAAA,EACvEF,EAAAA,EAAAA,KAACgB,EAAAA,IAAG,CACFF,MAAM,UACNG,QAAS,WACPvD,EAAY,WACZI,GAAW,EACb,EAAEoC,UAEFF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,cAAaC,SAAC,qBAE9BF,EAAAA,EAAAA,KAACgB,EAAAA,IAAG,CACFF,MAAM,WACNG,QAAS,WACPvD,EAAY,YACZI,GAAW,EACb,EAAEoC,UAEFF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,cAAaC,SAAC,sBAGhCC,EAAAA,EAAAA,MAACe,EAAAA,SAAQ,CACPjB,UAAU,yCACVkB,QAAS,CACPC,QAAS,CACPC,EAAgB,YAAb5D,EAAyB,KAAO,KAErC6D,MAAO,CACLD,EAAG,GAELE,QAAS,CACPF,EAAgB,YAAb5D,EAAyB,KAAO,MAErCyC,SAAA,EAEFF,EAAAA,EAAAA,KAACwB,EAAAA,SAAQ,CAACV,MAAM,UAAUb,UAAU,MAAKC,UACvCC,EAAAA,EAAAA,MAAA,QACEF,UAAU,2BACVzB,SAAUH,EAAaG,GAAU0B,SAAA,EAEjCC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAACyB,EAAAA,OAAKnC,EAAAA,EAAAA,GAAA,CACJoC,KAAK,OACLC,YAAY,aACZ1B,UAAU,8EACV2B,WAAY,CACV3B,UAAW,0CAEb4B,YAAY,aACRzD,EAAS,eAEdE,EAAOzB,YACNmD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAAC,+BAKnCC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAACyB,EAAAA,OAAKnC,EAAAA,EAAAA,GAAA,CACJoC,KAAK,OACLC,YAAY,YACZ1B,UAAU,8EACV2B,WAAY,CACV3B,UAAW,0CAEb4B,YAAY,aACRzD,EAAS,cAEdE,EAAOvB,WACNiD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAAC,8BAKnCC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAACyB,EAAAA,OAAKnC,EAAAA,EAAAA,GAAA,CACJoC,KAAK,QACLC,YAAY,gBACZ1B,UAAU,8EACV2B,WAAY,CACV3B,UAAW,0CAEb4B,YAAY,aACRzD,EAAS,WAEdE,EAAOtB,QACNgD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAAC,0BAGnCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAACyB,EAAAA,OAAKnC,EAAAA,EAAAA,GAAA,CACJoC,KAAK,WACLC,YAAY,WACZ1B,UAAU,8EACV2B,WAAY,CACV3B,UAAW,0CAEb4B,YAAY,aACRzD,EAAS,cAEdE,EAAOrB,WACN+C,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAAC,6BAMnCF,EAAAA,EAAAA,KAAC8B,EAAAA,SAAQ,CACPC,OACE5B,EAAAA,EAAAA,MAAA,KAAGM,MAAM,YAAYR,UAAU,cAAaC,SAAA,CAAC,2CACJF,EAAAA,EAAAA,KAAA,SAAS,qBAEhDA,EAAAA,EAAAA,KAAA,QAAMC,UAAU,oCAAmCC,SAAC,qBAE7C,KACNF,EAAAA,EAAAA,KAAA,UACDA,EAAAA,EAAAA,KAAA,QAAMC,UAAU,2BAA0BC,SAAC,sBAK/C2B,YAAY,GACZZ,QAAS,kBAAMnD,GAAYD,EAAQ,KAGrCmC,EAAAA,EAAAA,KAACgC,EAAAA,OAAM,CACLC,KAAK,KACLhC,UAAU,+BACVyB,KAAK,SACLQ,UAAsB,IAAZrE,EAAkBqC,SAC7B,oBAGDC,EAAAA,EAAAA,MAAA,KAAGF,UAAU,0DAAyDC,SAAA,CAAC,mBACpD,KACjBF,EAAAA,EAAAA,KAAA,QACEC,UAAU,0CACVgB,QAAS,kBAAM9D,EAAS,mBAAmB,EAAC+C,SAC7C,qBAMPF,EAAAA,EAAAA,KAACwB,EAAAA,SAAQ,CAACV,MAAM,WAAWb,UAAU,MAAKC,UACxCC,EAAAA,EAAAA,MAAA,QACEF,UAAU,2BACVzB,SAAUH,EAAaG,GAAU0B,SAAA,EAEjCC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAACyB,EAAAA,OAAKnC,EAAAA,EAAAA,GAAA,CACJoC,KAAK,OACLC,YAAY,aACZ1B,UAAU,8EACV2B,WAAY,CACV3B,UAAW,0CAEb4B,YAAY,aACRzD,EAAS,eAEdE,EAAOzB,YACNmD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAAC,+BAKnCC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAACyB,EAAAA,OAAKnC,EAAAA,EAAAA,GAAA,CACJoC,KAAK,OACLC,YAAY,YACZ1B,UAAU,8EACV2B,WAAY,CACV3B,UAAW,0CAEb4B,YAAY,aACRzD,EAAS,cAEdE,EAAOvB,WACNiD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAAC,8BAKnCC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAACyB,EAAAA,OAAKnC,EAAAA,EAAAA,GAAA,CACJoC,KAAK,QACLC,YAAY,gBACZ1B,UAAU,8EACV2B,WAAY,CACV3B,UAAW,0CAEb4B,YAAY,aACRzD,EAAS,WAEdE,EAAOtB,QACNgD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAAC,0BAGnCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAACyB,EAAAA,OAAKnC,EAAAA,EAAAA,GAAA,CACJoC,KAAK,WACLC,YAAY,WACZ1B,UAAU,8EACV2B,WAAY,CACV3B,UAAW,0CAEb4B,YAAY,aACRzD,EAAS,cAEdE,EAAOrB,WACN+C,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAAC,6BAMnCF,EAAAA,EAAAA,KAAC8B,EAAAA,SAAQ,CACPC,OACE5B,EAAAA,EAAAA,MAAA,KAAGM,MAAM,YAAYR,UAAU,cAAaC,SAAA,CAAC,2CACJF,EAAAA,EAAAA,KAAA,SAAS,qBAEhDA,EAAAA,EAAAA,KAAA,QAAMC,UAAU,oCAAmCC,SAAC,qBAE7C,KACNF,EAAAA,EAAAA,KAAA,UACDA,EAAAA,EAAAA,KAAA,QAAMC,UAAU,2BAA0BC,SAAC,sBAK/C2B,YAAY,GACZZ,QAAS,kBAAMnD,GAAYD,EAAQ,KAGrCmC,EAAAA,EAAAA,KAACgC,EAAAA,OAAM,CACLC,KAAK,KACLhC,UAAU,+BACVyB,KAAK,SACLQ,UAAsB,IAAZrE,EAAkBqC,SAC7B,oBAGDC,EAAAA,EAAAA,MAAA,KAAGF,UAAU,0DAAyDC,SAAA,CAAC,mBACpD,KACjBF,EAAAA,EAAAA,KAAA,QACEC,UAAU,0CACVgB,QAAS,kBAAM9D,EAAS,mBAAmB,EAAC+C,SAC7C,mCAavB,C,2BChVMd,E,QAAM+C,EAAMC,OAAO,CAEvBC,QAAS,4BACTC,QAAS,CACP,eAAgB,sBAKpB,K","sources":["utils/validations/register-form-validation.ts","pages/5_01_create_event_planner/index.tsx","utils/api.ts"],"sourcesContent":["import * as z from 'zod';\n\nexport const RegisterFormSchema = z.object({\n  firstName: z.string().min(1),\n  lastName: z.string().min(1),\n  email: z.string().email().min(1),\n  password: z.string().min(1),\n});\n\nexport type RegisterFormValues = z.infer<typeof RegisterFormSchema>;\n","import LOGO from '../../assets/register/logo.png';\n\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Checkbox,\n  Input,\n  Tab,\n  TabPanel,\n  Tabs,\n  TabsBody,\n  TabsHeader,\n} from '@material-tailwind/react';\nimport { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport api from '../../utils/api';\nimport {\n  RegisterFormSchema,\n  RegisterFormValues,\n} from '../../utils/validations/register-form-validation';\n\nexport default function CheckoutForm() {\n  const navigate = useNavigate();\n  const [userType, setUserType] = useState('PLANNER');\n  const [checked, setChecked] = useState(false);\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<RegisterFormValues>({\n    resolver: zodResolver(RegisterFormSchema),\n    defaultValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n    },\n  });\n\n  const onSubmit = async (values: RegisterFormValues) => {\n    try {\n      const { data } = await api.post('/auth/register', {\n        ...values,\n        userType,\n      });\n\n      if (data.userType === 'PROVIDER') {\n        navigate('/provider-dashboard');\n      } else {\n        navigate('/planner-dashboard');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div className='flex items-center justify-center h-screen bg-[#f3f1fb]'>\n      <div>\n        <div className='flex items-center justify-center mb-6'>\n          <img src={LOGO} alt='aad' className=' w-[150px] object-contain' />\n        </div>\n\n        {/* <Card className=\"w-full max-w-[24rem]\"> */}\n        <Card className='w-[28rem]'>\n          <CardHeader\n            color='white'\n            floated={false}\n            shadow={false}\n            className='m-0 grid place-items-center px-4 pt-8 pb-0 text-center'\n          >\n            <h2 className='text-[30] text-primary'>Create Account</h2>\n          </CardHeader>\n          <CardBody>\n            <Tabs value={userType} className='overflow-visible'>\n              <TabsHeader className='relative z-0 border border-[#E0E0E0] rounded-3xl '>\n                <Tab\n                  value='PLANNER'\n                  onClick={() => {\n                    setUserType('PLANNER');\n                    setChecked(false);\n                  }}\n                >\n                  <h2 className='text-[16px]'>Event Planner</h2>\n                </Tab>\n                <Tab\n                  value='PROVIDER'\n                  onClick={() => {\n                    setUserType('PROVIDER');\n                    setChecked(false);\n                  }}\n                >\n                  <h2 className='text-[16px]'>AV Provider</h2>\n                </Tab>\n              </TabsHeader>\n              <TabsBody\n                className='!overflow-x-hidden !overflow-y-visible'\n                animate={{\n                  initial: {\n                    x: userType === 'PLANNER' ? 400 : -400,\n                  },\n                  mount: {\n                    x: 0,\n                  },\n                  unmount: {\n                    x: userType === 'PLANNER' ? 400 : -400,\n                  },\n                }}\n              >\n                <TabPanel value='PLANNER' className='p-0'>\n                  <form\n                    className='mt-6 flex flex-col gap-4'\n                    onSubmit={handleSubmit(onSubmit)}\n                  >\n                    <div>\n                      <Input\n                        type='text'\n                        placeholder='First Name'\n                        className=' !border-t-blue-gray-200 focus:!border-t-gray-900 bg-[#f3f1fb] rounded-full'\n                        labelProps={{\n                          className: 'before:content-none after:content-none',\n                        }}\n                        crossOrigin='anonymous'\n                        {...register('firstName')}\n                      />\n                      {errors.firstName && (\n                        <span className='text-red-500'>\n                          First Name is required\n                        </span>\n                      )}\n                    </div>\n                    <div>\n                      <Input\n                        type='text'\n                        placeholder='Last Name'\n                        className=' !border-t-blue-gray-200 focus:!border-t-gray-900 bg-[#f3f1fb] rounded-full'\n                        labelProps={{\n                          className: 'before:content-none after:content-none',\n                        }}\n                        crossOrigin='anonymous'\n                        {...register('lastName')}\n                      />\n                      {errors.lastName && (\n                        <span className='text-red-500'>\n                          Last Name is required\n                        </span>\n                      )}\n                    </div>\n                    <div>\n                      <Input\n                        type='email'\n                        placeholder='Email Address'\n                        className=' !border-t-blue-gray-200 focus:!border-t-gray-900 bg-[#f3f1fb] rounded-full'\n                        labelProps={{\n                          className: 'before:content-none after:content-none',\n                        }}\n                        crossOrigin='anonymous'\n                        {...register('email')}\n                      />\n                      {errors.email && (\n                        <span className='text-red-500'>Email is required</span>\n                      )}\n                    </div>\n                    <div className='mb-4'>\n                      <Input\n                        type='password'\n                        placeholder='Password'\n                        className=' !border-t-blue-gray-200 focus:!border-t-gray-900 bg-[#f3f1fb] rounded-full'\n                        labelProps={{\n                          className: 'before:content-none after:content-none',\n                        }}\n                        crossOrigin='anonymous'\n                        {...register('password')}\n                      />\n                      {errors.password && (\n                        <span className='text-red-500'>\n                          Password is required\n                        </span>\n                      )}\n                    </div>\n\n                    <Checkbox\n                      label={\n                        <p color='blue-gray' className='text-[14px]'>\n                          By hitting the \"Create Account\" button,<br></br> you\n                          agree to the\n                          <span className='text-secondary underline mx-[5px]'>\n                            Terms of Service\n                          </span>\n                          &<br></br>\n                          <span className='text-secondary underline'>\n                            Privacy Policy\n                          </span>\n                        </p>\n                      }\n                      crossOrigin=''\n                      onClick={() => setChecked(!checked)}\n                    />\n\n                    <Button\n                      size='lg'\n                      className='rounded-full bg-primary mt-2'\n                      type='submit'\n                      disabled={checked === false}\n                    >\n                      Create Account\n                    </Button>\n                    <p className='mt-2 flex items-center justify-center gap-2 text-[14px]'>\n                      Have an account?{' '}\n                      <span\n                        className='text-secondary underline cursor-pointer'\n                        onClick={() => navigate('/6_existing_user')}\n                      >\n                        Sign In\n                      </span>\n                    </p>\n                  </form>\n                </TabPanel>\n                <TabPanel value='PROVIDER' className='p-0'>\n                  <form\n                    className='mt-6 flex flex-col gap-4'\n                    onSubmit={handleSubmit(onSubmit)}\n                  >\n                    <div>\n                      <Input\n                        type='text'\n                        placeholder='First Name'\n                        className=' !border-t-blue-gray-200 focus:!border-t-gray-900 bg-[#f3f1fb] rounded-full'\n                        labelProps={{\n                          className: 'before:content-none after:content-none',\n                        }}\n                        crossOrigin='anonymous'\n                        {...register('firstName')}\n                      />\n                      {errors.firstName && (\n                        <span className='text-red-500'>\n                          First Name is required\n                        </span>\n                      )}\n                    </div>\n                    <div>\n                      <Input\n                        type='text'\n                        placeholder='Last Name'\n                        className=' !border-t-blue-gray-200 focus:!border-t-gray-900 bg-[#f3f1fb] rounded-full'\n                        labelProps={{\n                          className: 'before:content-none after:content-none',\n                        }}\n                        crossOrigin='anonymous'\n                        {...register('lastName')}\n                      />\n                      {errors.lastName && (\n                        <span className='text-red-500'>\n                          Last Name is required\n                        </span>\n                      )}\n                    </div>\n                    <div>\n                      <Input\n                        type='email'\n                        placeholder='Email Address'\n                        className=' !border-t-blue-gray-200 focus:!border-t-gray-900 bg-[#f3f1fb] rounded-full'\n                        labelProps={{\n                          className: 'before:content-none after:content-none',\n                        }}\n                        crossOrigin='anonymous'\n                        {...register('email')}\n                      />\n                      {errors.email && (\n                        <span className='text-red-500'>Email is required</span>\n                      )}\n                    </div>\n                    <div className='mb-4'>\n                      <Input\n                        type='password'\n                        placeholder='Password'\n                        className=' !border-t-blue-gray-200 focus:!border-t-gray-900 bg-[#f3f1fb] rounded-full'\n                        labelProps={{\n                          className: 'before:content-none after:content-none',\n                        }}\n                        crossOrigin='anonymous'\n                        {...register('password')}\n                      />\n                      {errors.password && (\n                        <span className='text-red-500'>\n                          Password is required\n                        </span>\n                      )}\n                    </div>\n\n                    <Checkbox\n                      label={\n                        <p color='blue-gray' className='text-[14px]'>\n                          By hitting the \"Create Account\" button,<br></br> you\n                          agree to the\n                          <span className='text-secondary underline mx-[5px]'>\n                            Terms of Service\n                          </span>\n                          &<br></br>\n                          <span className='text-secondary underline'>\n                            Privacy Policy\n                          </span>\n                        </p>\n                      }\n                      crossOrigin=''\n                      onClick={() => setChecked(!checked)}\n                    />\n\n                    <Button\n                      size='lg'\n                      className='rounded-full bg-primary mt-2'\n                      type='submit'\n                      disabled={checked === false}\n                    >\n                      Create Account\n                    </Button>\n                    <p className='mt-2 flex items-center justify-center gap-2 text-[14px]'>\n                      Have an account?{' '}\n                      <span\n                        className='text-secondary underline cursor-pointer'\n                        onClick={() => navigate('/6_existing_user')}\n                      >\n                        Sign In\n                      </span>\n                    </p>\n                  </form>\n                </TabPanel>\n              </TabsBody>\n            </Tabs>\n          </CardBody>\n        </Card>\n      </div>\n    </div>\n  );\n}\n","import axios from 'axios';\n\n// Create an instance of axios\nconst api = axios.create({\n  // baseURL: 'http://52.41.255.9:5000/api',\n  baseURL: 'http://localhost:5000/api',\n  headers: {\n    'Content-Type': 'application/json',\n    // 'Content-Type': 'multipart/form-data',\n  },\n});\n\nexport default api;\n"],"names":["RegisterFormSchema","z","firstName","min","lastName","email","password","CheckoutForm","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","userType","setUserType","_useState3","_useState4","checked","setChecked","_useForm","useForm","resolver","zodResolver","defaultValues","register","handleSubmit","errors","formState","onSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","_yield$api$post","wrap","_context","prev","next","api","post","_objectSpread","sent","data","t0","console","log","stop","_x","apply","arguments","_jsx","className","children","_jsxs","src","LOGO","alt","Card","CardHeader","color","floated","shadow","CardBody","Tabs","value","TabsHeader","Tab","onClick","TabsBody","animate","initial","x","mount","unmount","TabPanel","Input","type","placeholder","labelProps","crossOrigin","Checkbox","label","Button","size","disabled","axios","create","baseURL","headers"],"sourceRoot":""}